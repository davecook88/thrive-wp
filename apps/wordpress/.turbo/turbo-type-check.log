

> @thrive/wordpress@1.0.0 type-check /Users/davidcook/personal/thrive-wp/apps/wordpress
> tsc --noEmit

[96mplugins/thrive-admin/src/components/UsersPage/index.ts[0m:[93m1[0m:[93m41[0m - [91merror[0m[90m TS2307: [0mCannot find module './UsersFilters.vue' or its corresponding type declarations.

[7m1[0m export { default as UsersFilters } from "./UsersFilters.vue";
[7m [0m [91m                                        ~~~~~~~~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/components/UsersPage/index.ts[0m:[93m2[0m:[93m39[0m - [91merror[0m[90m TS2307: [0mCannot find module './UsersTable.vue' or its corresponding type declarations.

[7m2[0m export { default as UsersTable } from "./UsersTable.vue";
[7m [0m [91m                                      ~~~~~~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/components/UsersPage/index.ts[0m:[93m5[0m:[93m44[0m - [91merror[0m[90m TS2307: [0mCannot find module './UsersPagination.vue' or its corresponding type declarations.

[7m5[0m export { default as UsersPagination } from "./UsersPagination.vue";
[7m [0m [91m                                           ~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/lib/api/client.ts[0m:[93m2[0m:[93m34[0m - [91merror[0m[90m TS2835: [0mRelative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../types/users.js'?

[7m2[0m import type { ApiResponse } from "../types/users";
[7m [0m [91m                                 ~~~~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/lib/api/users.ts[0m:[93m1[0m:[93m27[0m - [91merror[0m[90m TS2835: [0mRelative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './client.js'?

[7m1[0m import { apiClient } from "./client";
[7m [0m [91m                          ~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/lib/api/users.ts[0m:[93m6[0m:[93m8[0m - [91merror[0m[90m TS2835: [0mRelative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../schemas/users.js'?

[7m6[0m } from "../schemas/users";
[7m [0m [91m       ~~~~~~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/lib/api/users.ts[0m:[93m12[0m:[93m8[0m - [91merror[0m[90m TS2835: [0mRelative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../types/users.js'?

[7m12[0m } from "../types/users";
[7m  [0m [91m       ~~~~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/lib/composables/use-users.ts[0m:[93m7[0m:[93m8[0m - [91merror[0m[90m TS2835: [0mRelative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../index.js'?

[7m7[0m } from "../index";
[7m [0m [91m       ~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/lib/index.ts[0m:[93m2[0m:[93m15[0m - [91merror[0m[90m TS2835: [0mRelative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './types/users.js'?

[7m2[0m export * from "./types/users";
[7m [0m [91m              ~~~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/lib/index.ts[0m:[93m11[0m:[93m8[0m - [91merror[0m[90m TS2835: [0mRelative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './schemas/users.js'?

[7m11[0m } from "./schemas/users";
[7m  [0m [91m       ~~~~~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/lib/index.ts[0m:[93m12[0m:[93m15[0m - [91merror[0m[90m TS2835: [0mRelative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './api/client.js'?

[7m12[0m export * from "./api/client";
[7m  [0m [91m              ~~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/lib/index.ts[0m:[93m13[0m:[93m15[0m - [91merror[0m[90m TS2835: [0mRelative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './api/users.js'?

[7m13[0m export * from "./api/users";
[7m  [0m [91m              ~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/lib/index.ts[0m:[93m14[0m:[93m15[0m - [91merror[0m[90m TS2835: [0mRelative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './utils/user-utils.js'?

[7m14[0m export * from "./utils/user-utils";
[7m  [0m [91m              ~~~~~~~~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/lib/index.ts[0m:[93m15[0m:[93m15[0m - [91merror[0m[90m TS2835: [0mRelative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean './composables/use-users.js'?

[7m15[0m export * from "./composables/use-users";
[7m  [0m [91m              ~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/lib/index.ts[0m:[93m16[0m:[93m30[0m - [91merror[0m[90m TS2834: [0mRelative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.

[7m16[0m export { thriveClient } from "./thrive";
[7m  [0m [91m                             ~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/lib/types/calendar-utils.ts[0m:[93m1[0m:[93m47[0m - [91merror[0m[90m TS2834: [0mRelative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.

[7m1[0m import type { ThriveCalendarContextApi } from "./calendar";
[7m [0m [91m                                              ~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/lib/types/calendar-utils.ts[0m:[93m5[0m:[93m8[0m - [91merror[0m[90m TS2834: [0mRelative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Consider adding an extension to the import path.

[7m5[0m } from "./calendar";
[7m [0m [91m       ~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/lib/utils/user-utils.ts[0m:[93m1[0m:[93m35[0m - [91merror[0m[90m TS2835: [0mRelative import paths need explicit file extensions in ECMAScript imports when '--moduleResolution' is 'node16' or 'nodenext'. Did you mean '../types/users.js'?

[7m1[0m import type { UserResponse } from "../types/users";
[7m [0m [91m                                  ~~~~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/main.ts[0m:[93m4[0m:[93m23[0m - [91merror[0m[90m TS2307: [0mCannot find module './components/Dashboard.vue' or its corresponding type declarations.

[7m4[0m import Dashboard from "./components/Dashboard.vue";
[7m [0m [91m                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/main.ts[0m:[93m5[0m:[93m19[0m - [91merror[0m[90m TS2307: [0mCannot find module './components/Users.vue' or its corresponding type declarations.

[7m5[0m import Users from "./components/Users.vue";
[7m [0m [91m                  ~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/main.ts[0m:[93m6[0m:[93m22[0m - [91merror[0m[90m TS2307: [0mCannot find module './components/Settings.vue' or its corresponding type declarations.

[7m6[0m import Settings from "./components/Settings.vue";
[7m [0m [91m                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/main.ts[0m:[93m7[0m:[93m27[0m - [91merror[0m[90m TS2307: [0mCannot find module './components/PackagesAdmin.vue' or its corresponding type declarations.

[7m7[0m import PackagesAdmin from "./components/PackagesAdmin.vue";
[7m [0m [91m                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mplugins/thrive-admin/src/main.ts[0m:[93m8[0m:[93m26[0m - [91merror[0m[90m TS2307: [0mCannot find module './components/GroupClasses.vue' or its corresponding type declarations.

[7m8[0m import GroupClasses from "./components/GroupClasses.vue";
[7m [0m [91m                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/booking-session-details/BookingSessionDetailsComponent.tsx[0m:[93m76[0m:[93m34[0m - [91merror[0m[90m TS2339: [0mProperty 'name' does not exist on type 'Teacher | { id: number; userId: number; displayName: string; isActive: boolean; initials: string; bio?: string; avatarUrl?: string; languages?: string[]; levels?: number[]; specialties?: string[]; rating?: number; }'.
  Property 'name' does not exist on type '{ id: number; userId: number; displayName: string; isActive: boolean; initials: string; bio?: string; avatarUrl?: string; languages?: string[]; levels?: number[]; specialties?: string[]; rating?: number; }'.

[7m76[0m           setTeacherName(teacher.name || `Teacher #${teacherId}`);
[7m  [0m [91m                                 ~~~~[0m

[96mthemes/custom-theme/blocks/conditional-stripe-payment/ConditionalStripePaymentComponent.tsx[0m:[93m6[0m:[93m8[0m - [91merror[0m[90m TS1479: [0mThe current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("@thrive/shared/types/payments")' call instead.
  To convert this file to an ECMAScript module, add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m6[0m } from "@thrive/shared/types/payments";
[7m [0m [91m       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/conditional-stripe-payment/ConditionalStripePaymentComponent.tsx[0m:[93m33[0m:[93m5[0m - [91merror[0m[90m TS2687: [0mAll declarations of 'Stripe' must have identical modifiers.

[7m33[0m     Stripe: any;
[7m  [0m [91m    ~~~~~~[0m

[96mthemes/custom-theme/blocks/conditional-stripe-payment/ConditionalStripePaymentComponent.tsx[0m:[93m33[0m:[93m5[0m - [91merror[0m[90m TS2717: [0mSubsequent property declarations must have the same type.  Property 'Stripe' must be of type 'StripeConstructor', but here has type 'any'.

[7m33[0m     Stripe: any;
[7m  [0m [91m    ~~~~~~[0m

  [96mnode_modules/@stripe/stripe-js/dist/index.d.ts[0m:[93m12[0m:[93m5[0m
    [7m12[0m     Stripe?: StripeConstructor;
    [7m  [0m [96m    ~~~~~~[0m
    'Stripe' was also declared here.

[96mthemes/custom-theme/blocks/hooks/get-teachers.ts[0m:[93m1[0m:[93m34[0m - [91merror[0m[90m TS1479: [0mThe current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("@thrive/shared/types/teachers")' call instead.
  To convert this file to an ECMAScript module, change its file extension to '.mts', or add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m1[0m import { PublicTeacherDto } from "@thrive/shared/types/teachers";
[7m [0m [91m                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/hooks/get-teachers.ts[0m:[93m4[0m:[93m30[0m - [91merror[0m[90m TS1479: [0mThe current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("../../../../shared/thrive")' call instead.
  To convert this file to an ECMAScript module, change its file extension to '.mts', or add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m4[0m import { thriveClient } from "../../../../shared/thrive";
[7m [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/hooks/use-availability-slots.ts[0m:[93m2[0m:[93m40[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/calendar' or its corresponding type declarations.

[7m2[0m import type { AvailabilityEvent } from "@thrive/shared/calendar";
[7m [0m [91m                                       ~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/hooks/use-availability-slots.ts[0m:[93m3[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/thrive' or its corresponding type declarations.

[7m3[0m import { thriveClient } from "@thrive/shared/thrive";
[7m [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/hooks/use-calendar-events.ts[0m:[93m2[0m:[93m31[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/calendar' or its corresponding type declarations.

[7m2[0m import { CalendarEvent } from "@thrive/shared/calendar";
[7m [0m [91m                              ~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/hooks/use-student-credits.ts[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS1479: [0mThe current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("../../../../shared/thrive")' call instead.
  To convert this file to an ECMAScript module, change its file extension to '.mts', or add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m2[0m import { thriveClient } from "../../../../shared/thrive";
[7m [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/hooks/use-student-credits.ts[0m:[93m3[0m:[93m49[0m - [91merror[0m[90m TS1479: [0mThe current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("@thrive/shared/types/packages")' call instead.
  To convert this file to an ECMAScript module, change its file extension to '.mts', or add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m3[0m import { StudentPackageMyCreditsResponse } from "@thrive/shared/types/packages";
[7m [0m [91m                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/private-session-availability-calendar/components/PrivateSessionAvailabilityCalendar.tsx[0m:[93m8[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/calendar' or its corresponding type declarations.

[7m8[0m } from "@thrive/shared/calendar";
[7m [0m [91m       ~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/private-session-availability-calendar/components/PrivateSessionAvailabilityCalendar.tsx[0m:[93m9[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/thrive' or its corresponding type declarations.

[7m9[0m import { thriveClient } from "@thrive/shared/thrive";
[7m [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/private-session-availability-calendar/components/PrivateSessionAvailabilityCalendar.tsx[0m:[93m12[0m:[93m34[0m - [91merror[0m[90m TS1479: [0mThe current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("@thrive/shared/types/teachers")' call instead.
  To convert this file to an ECMAScript module, add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m12[0m import { PublicTeacherDto } from "@thrive/shared/types/teachers";
[7m  [0m [91m                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/selected-event-modal/components/AvailabilityModalContent/Header.tsx[0m:[93m3[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../../types/calendar' or its corresponding type declarations.

[7m3[0m import type { Teacher } from "../../../../types/calendar";
[7m [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/selected-event-modal/components/AvailabilityModalContent/index.tsx[0m:[93m5[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/calendar' or its corresponding type declarations.

[7m5[0m } from "@thrive/shared/calendar";
[7m [0m [91m       ~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/selected-event-modal/components/AvailabilityModalContent/PackageBookingButton.tsx[0m:[93m5[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/calendar' or its corresponding type declarations.

[7m5[0m } from "@thrive/shared/calendar";
[7m [0m [91m       ~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/selected-event-modal/components/AvailabilityModalContent/PackageBookingButton.tsx[0m:[93m6[0m:[93m32[0m - [91merror[0m[90m TS1479: [0mThe current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("@thrive/shared/types/packages")' call instead.
  To convert this file to an ECMAScript module, add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m6[0m import { StudentPackage } from "@thrive/shared/types/packages";
[7m [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/selected-event-modal/components/AvailabilityModalContent/PackagesFooter.tsx[0m:[93m4[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/calendar' or its corresponding type declarations.

[7m4[0m } from "@thrive/shared/calendar";
[7m [0m [91m       ~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/selected-event-modal/components/AvailabilityModalContent/PackagesFooter.tsx[0m:[93m5[0m:[93m32[0m - [91merror[0m[90m TS1479: [0mThe current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("@thrive/shared/types/packages")' call instead.
  To convert this file to an ECMAScript module, add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m5[0m import { StudentPackage } from "@thrive/shared/types/packages";
[7m [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/selected-event-modal/components/AvailabilityModalContent/TeacherInfoPanel.tsx[0m:[93m1[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../../types/calendar' or its corresponding type declarations.

[7m1[0m import type { Teacher } from "../../../../types/calendar";
[7m [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/selected-event-modal/components/AvailabilityModalContent/TeacherSelectionPanel.tsx[0m:[93m1[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../../types/calendar' or its corresponding type declarations.

[7m1[0m import type { Teacher } from "../../../../types/calendar";
[7m [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/student-calendar/components/BookingFilters.tsx[0m:[93m2[0m:[93m28[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/calendar' or its corresponding type declarations.

[7m2[0m import type { Level } from "@thrive/shared/calendar";
[7m [0m [91m                           ~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/student-calendar/components/StudentCalendar.tsx[0m:[93m3[0m:[93m30[0m - [91merror[0m[90m TS1479: [0mThe current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("../../../../../shared/thrive")' call instead.
  To convert this file to an ECMAScript module, add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m3[0m import { thriveClient } from "../../../../../shared/thrive";
[7m [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/student-calendar/components/StudentCalendar.tsx[0m:[93m15[0m:[93m53[0m - [91merror[0m[90m TS1479: [0mThe current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("@thrive/shared")' call instead.
  To convert this file to an ECMAScript module, add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m15[0m import { BaseCalendarEvent, PublicTeacherDto } from "@thrive/shared";
[7m  [0m [91m                                                    ~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/student-calendar/components/StudentCalendar.tsx[0m:[93m16[0m:[93m39[0m - [91merror[0m[90m TS1479: [0mThe current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("../../../../../shared/calendar")' call instead.
  To convert this file to an ECMAScript module, add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m16[0m import { ThriveCalendarElement } from "../../../../../shared/calendar";
[7m  [0m [91m                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/student-calendar/components/StudentCalendar.tsx[0m:[93m17[0m:[93m26[0m - [91merror[0m[90m TS1479: [0mThe current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("@thrive/shared/types/level")' call instead.
  To convert this file to an ECMAScript module, add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m17[0m import { LevelDto } from "@thrive/shared/types/level";
[7m  [0m [91m                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/student-calendar/components/TeacherGrid.tsx[0m:[93m1[0m:[93m34[0m - [91merror[0m[90m TS1479: [0mThe current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("@thrive/shared/types/teachers")' call instead.
  To convert this file to an ECMAScript module, add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m1[0m import { PublicTeacherDto } from "@thrive/shared/types/teachers";
[7m [0m [91m                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/student-calendar/components/TeacherGrid.tsx[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/calendar' or its corresponding type declarations.

[7m2[0m import type { Teacher } from "@thrive/shared/calendar";
[7m [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/student-calendar/components/useEventClick.ts[0m:[93m6[0m:[93m8[0m - [91merror[0m[90m TS1541: [0mType-only import of an ECMAScript module from a CommonJS module must have a 'resolution-mode' attribute.
  To convert this file to an ECMAScript module, change its file extension to '.mts', or add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m6[0m } from "../../../../../shared/calendar";
[7m [0m [91m       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/student-calendar/components/useEventClick.ts[0m:[93m7[0m:[93m51[0m - [91merror[0m[90m TS1479: [0mThe current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("@thrive/shared")' call instead.
  To convert this file to an ECMAScript module, change its file extension to '.mts', or add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m7[0m import { isBookingEvent, isGroupClassEvent } from "@thrive/shared";
[7m [0m [91m                                                  ~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/student-calendar/utils/calendarData.ts[0m:[93m4[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/calendar' or its corresponding type declarations.

[7m4[0m } from "@thrive/shared/calendar";
[7m [0m [91m       ~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/student-calendar/utils/calendarData.ts[0m:[93m5[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/thrive' or its corresponding type declarations.

[7m5[0m import { thriveClient } from "@thrive/shared/thrive";
[7m [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/teacher-availability/components/TeacherAvailability.tsx[0m:[93m6[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../../types/calendar' or its corresponding type declarations.

[7m6[0m } from "../../../types/calendar";
[7m [0m [91m       ~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/teacher-availability/components/TeacherAvailability.tsx[0m:[93m14[0m:[93m7[0m - [91merror[0m[90m TS2717: [0mSubsequent property declarations must have the same type.  Property '"thrive-calendar"' must be of type 'any', but here has type '{ view?: "week" | "day" | "month" | "list"; date?: string; ref?: Ref<ThriveCalendarElement>; }'.

[7m14[0m       "thrive-calendar": {
[7m  [0m [91m      ~~~~~~~~~~~~~~~~~[0m

  [96mthemes/custom-theme/blocks/student-calendar/index.tsx[0m:[93m16[0m:[93m7[0m
    [7m16[0m       "thrive-calendar": any;
    [7m  [0m [96m      ~~~~~~~~~~~~~~~~~[0m
    '"thrive-calendar"' was also declared here.

[96mthemes/custom-theme/blocks/teacher-calendar/components/TeacherCalendar.tsx[0m:[93m7[0m:[93m8[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/calendar' or its corresponding type declarations.

[7m7[0m } from "@thrive/shared/calendar";
[7m [0m [91m       ~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/teacher-calendar/components/TeacherCalendar.tsx[0m:[93m8[0m:[93m32[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/calendar' or its corresponding type declarations.

[7m8[0m import { isBookingEvent } from "@thrive/shared/calendar";
[7m [0m [91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/teacher-calendar/edit.tsx[0m:[93m23[0m:[93m13[0m - [91merror[0m[90m TS2322: [0mType 'string' is not assignable to type '"week" | "day" | "month" | ("week" | "day" | "month")[]'.

[7m23[0m             value={attributes.view}
[7m  [0m [91m            ~~~~~[0m

  [96mnode_modules/@wordpress/components/build-types/select-control/types.d.ts[0m:[93m53[0m:[93m5[0m
    [7m53[0m     value?: NoInfer<V>;
    [7m  [0m [96m    ~~~~~[0m
    The expected type comes from property 'value' which is declared here on type 'IntrinsicAttributes & (WordPressComponentProps<SelectControlProps<"week" | "day" | "month">, "select", false> & { ...; })'

[96mthemes/custom-theme/blocks/teacher-info/components/TeacherInfo.tsx[0m:[93m2[0m:[93m47[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/calendar' or its corresponding type declarations.

[7m2[0m import type { Teacher, TeacherLocation } from "@thrive/shared/calendar";
[7m [0m [91m                                              ~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/teacher-info/view.tsx[0m:[93m5[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/clients/thrive' or its corresponding type declarations.

[7m5[0m import { thriveClient } from "@thrive/shared/clients/thrive";
[7m [0m [91m                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/teacher-info/view.tsx[0m:[93m6[0m:[93m34[0m - [91merror[0m[90m TS1479: [0mThe current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("@thrive/shared/types/teachers")' call instead.
  To convert this file to an ECMAScript module, add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m6[0m import { PublicTeacherDto } from "@thrive/shared/types/teachers";
[7m [0m [91m                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/teacher-picker/components/TeacherPicker.tsx[0m:[93m4[0m:[93m34[0m - [91merror[0m[90m TS1479: [0mThe current file is a CommonJS module whose imports will produce 'require' calls; however, the referenced file is an ECMAScript module and cannot be imported with 'require'. Consider writing a dynamic 'import("@thrive/shared/types/teachers")' call instead.
  To convert this file to an ECMAScript module, add the field `"type": "module"` to '/Users/davidcook/personal/thrive-wp/apps/wordpress/themes/custom-theme/package.json'.

[7m4[0m import { PublicTeacherDto } from "@thrive/shared/types/teachers";
[7m [0m [91m                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/teacher-picker/view.tsx[0m:[93m3[0m:[93m40[0m - [91merror[0m[90m TS2307: [0mCannot find module '@thrive/shared/types/calendar-utils' or its corresponding type declarations.

[7m3[0m import { getCalendarContextSafe } from "@thrive/shared/types/calendar-utils";
[7m [0m [91m                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/blocks/teacher-picker/view.tsx[0m:[93m39[0m:[93m9[0m - [91merror[0m[90m TS2769: [0mNo overload matches this call.
  The last overload gave the following error.
    Object literal may only specify known properties, and 'querySelector' does not exist in type 'Attributes & TeacherPickerProps'.

[7m39[0m         querySelector: ELEMENT_CLASS,
[7m  [0m [91m        ~~~~~~~~~~~~~[0m

  [96mnode_modules/@types/react/index.d.ts[0m:[93m562[0m:[93m14[0m
    [7m562[0m     function createElement<P extends {}>(
    [7m   [0m [96m             ~~~~~~~~~~~~~[0m
    The last overload is declared here.

[96mthemes/custom-theme/components/TeacherDetails.tsx[0m:[93m1[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../types/calendar' or its corresponding type declarations.

[7m1[0m import type { Teacher } from "../types/calendar";
[7m [0m [91m                             ~~~~~~~~~~~~~~~~~~~[0m

[96mthemes/custom-theme/components/TeacherSelectionRow.tsx[0m:[93m2[0m:[93m30[0m - [91merror[0m[90m TS2307: [0mCannot find module '../types/calendar' or its corresponding type declarations.

[7m2[0m import type { Teacher } from "../types/calendar";
[7m [0m [91m                             ~~~~~~~~~~~~~~~~~~~[0m


Found 69 errors in 35 files.

Errors  Files
     3  plugins/thrive-admin/src/components/UsersPage/index.ts[90m:1[0m
     1  plugins/thrive-admin/src/lib/api/client.ts[90m:2[0m
     3  plugins/thrive-admin/src/lib/api/users.ts[90m:1[0m
     1  plugins/thrive-admin/src/lib/composables/use-users.ts[90m:7[0m
     7  plugins/thrive-admin/src/lib/index.ts[90m:2[0m
     2  plugins/thrive-admin/src/lib/types/calendar-utils.ts[90m:1[0m
     1  plugins/thrive-admin/src/lib/utils/user-utils.ts[90m:1[0m
     5  plugins/thrive-admin/src/main.ts[90m:4[0m
     1  themes/custom-theme/blocks/booking-session-details/BookingSessionDetailsComponent.tsx[90m:76[0m
     3  themes/custom-theme/blocks/conditional-stripe-payment/ConditionalStripePaymentComponent.tsx[90m:6[0m
     2  themes/custom-theme/blocks/hooks/get-teachers.ts[90m:1[0m
     2  themes/custom-theme/blocks/hooks/use-availability-slots.ts[90m:2[0m
     1  themes/custom-theme/blocks/hooks/use-calendar-events.ts[90m:2[0m
     2  themes/custom-theme/blocks/hooks/use-student-credits.ts[90m:2[0m
     3  themes/custom-theme/blocks/private-session-availability-calendar/components/PrivateSessionAvailabilityCalendar.tsx[90m:8[0m
     1  themes/custom-theme/blocks/selected-event-modal/components/AvailabilityModalContent/Header.tsx[90m:3[0m
     1  themes/custom-theme/blocks/selected-event-modal/components/AvailabilityModalContent/index.tsx[90m:5[0m
     2  themes/custom-theme/blocks/selected-event-modal/components/AvailabilityModalContent/PackageBookingButton.tsx[90m:5[0m
     2  themes/custom-theme/blocks/selected-event-modal/components/AvailabilityModalContent/PackagesFooter.tsx[90m:4[0m
     1  themes/custom-theme/blocks/selected-event-modal/components/AvailabilityModalContent/TeacherInfoPanel.tsx[90m:1[0m
     1  themes/custom-theme/blocks/selected-event-modal/components/AvailabilityModalContent/TeacherSelectionPanel.tsx[90m:1[0m
     1  themes/custom-theme/blocks/student-calendar/components/BookingFilters.tsx[90m:2[0m
     4  themes/custom-theme/blocks/student-calendar/components/StudentCalendar.tsx[90m:3[0m
     2  themes/custom-theme/blocks/student-calendar/components/TeacherGrid.tsx[90m:1[0m
     2  themes/custom-theme/blocks/student-calendar/components/useEventClick.ts[90m:6[0m
     2  themes/custom-theme/blocks/student-calendar/utils/calendarData.ts[90m:4[0m
     2  themes/custom-theme/blocks/teacher-availability/components/TeacherAvailability.tsx[90m:6[0m
     2  themes/custom-theme/blocks/teacher-calendar/components/TeacherCalendar.tsx[90m:7[0m
     1  themes/custom-theme/blocks/teacher-calendar/edit.tsx[90m:23[0m
     1  themes/custom-theme/blocks/teacher-info/components/TeacherInfo.tsx[90m:2[0m
     2  themes/custom-theme/blocks/teacher-info/view.tsx[90m:5[0m
     1  themes/custom-theme/blocks/teacher-picker/components/TeacherPicker.tsx[90m:4[0m
     2  themes/custom-theme/blocks/teacher-picker/view.tsx[90m:3[0m
     1  themes/custom-theme/components/TeacherDetails.tsx[90m:1[0m
     1  themes/custom-theme/components/TeacherSelectionRow.tsx[90m:2[0m
[41m[30m ELIFECYCLE [39m[49m [31mCommand failed with exit code 2.[39m
