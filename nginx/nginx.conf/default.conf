upstream api_upstream { server nestjs:3000; }
upstream wp_upstream { server wordpress:80; }

server {
    listen 80;
    server_name _;
    resolver 127.0.0.11 ipv6=off valid=30s;

    # Static assets (served directly by Nginx)
    # Mount built bundles into /usr/share/nginx/html/assets via docker-compose volumes.
    location ^~ /assets/ {
        root /usr/share/nginx/html;
        access_log off;
        add_header Cache-Control "public, max-age=31536000, immutable";
        # Security headers for static files
        add_header X-Content-Type-Options nosniff;
        add_header Referrer-Policy no-referrer-when-downgrade;
        add_header X-Frame-Options SAMEORIGIN;
        try_files $uri =404;
    }

    # Internal auth check subrequest (always safe to call)
    # This will 204 immediately if no session cookie present.
    location = /_auth_maybe {
        internal;
        if ($http_cookie !~* "thrive_sess=") { return 204; }
        proxy_pass http://api_upstream/auth/introspect;
        proxy_set_header Host $http_host;
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
    }

    # API proxy with auth introspection
    location /api/ {
        auth_request /_auth_maybe;
        auth_request_set $auth_user_id      $upstream_http_x_auth_user_id;
        auth_request_set $auth_email        $upstream_http_x_auth_email;
        auth_request_set $auth_name         $upstream_http_x_auth_name;
        auth_request_set $auth_roles        $upstream_http_x_auth_roles;
        auth_request_set $auth_context_json $upstream_http_x_auth_context;

        # Forward auth headers to API
        proxy_set_header X-Auth-Context $auth_context_json;
        proxy_set_header X-Auth-User-Id $auth_user_id;
        proxy_set_header X-Auth-Email   $auth_email;
        proxy_set_header X-Auth-Name    $auth_name;
        proxy_set_header X-Auth-Roles   $auth_roles;

        # Continue even if unauthorized (fail-open for some API endpoints)
        error_page 401 403 500 502 503 504 = @api_unauth;

        proxy_pass http://api_upstream/;
        proxy_set_header Host $http_host; # include port to avoid WP canonical redirects
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    location @api_unauth {
        proxy_set_header X-Auth-Context  "";
        proxy_set_header X-Auth-User-Id  "";
        proxy_set_header X-Auth-Email    "";
        proxy_set_header X-Auth-Name     "";
        proxy_set_header X-Auth-Roles    "";
        proxy_pass http://api_upstream;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    # Auth routes direct
    location /auth/ {
        proxy_pass http://api_upstream/auth/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    # WordPress with auth gateway (fail-open)
    location / {
        auth_request /_auth_maybe;
        auth_request_set $auth_user_id      $upstream_http_x_auth_user_id;
        auth_request_set $auth_email        $upstream_http_x_auth_email;
        auth_request_set $auth_name         $upstream_http_x_auth_name;
        auth_request_set $auth_roles        $upstream_http_x_auth_roles;
        auth_request_set $auth_context_json $upstream_http_x_auth_context;

        # Forward single JSON header (preferred) plus legacy discrete headers
        proxy_set_header X-Auth-Context $auth_context_json;
        proxy_set_header X-Auth-User-Id $auth_user_id;
        proxy_set_header X-Auth-Email   $auth_email;
        proxy_set_header X-Auth-Name    $auth_name;
        proxy_set_header X-Auth-Roles   $auth_roles;

        # Continue even if unauthorized or auth upstream temporarily failing (fail-open)
        error_page 401 403 500 502 503 504 = @unauth;

        proxy_pass http://wp_upstream;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    location @unauth {
        proxy_set_header X-Auth-Context  "";
        proxy_set_header X-Auth-User-Id  "";
        proxy_set_header X-Auth-Email    "";
        proxy_set_header X-Auth-Name     "";
        proxy_set_header X-Auth-Roles    "";
        proxy_pass http://wp_upstream;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
    }
}
